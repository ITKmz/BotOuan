import json
import random
import discord
import openai
import os
from dotenv import load_dotenv

# ‡πÇ‡∏´‡∏•‡∏î Token ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env
load_dotenv()
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
DATA_FOLDER = "data"

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå boonmathun_core.json
with open("data/boonmathun_core.json", "r", encoding="utf-8") as file:
    core = json.load(file)

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Channel ‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏ï‡∏≠‡∏ö (‡πÉ‡∏™‡πà ID ‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó)
ALLOWED_CHANNEL_ID = 1349123952206942321

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Intents ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏≠‡∏ó
intents = discord.Intents.default()
intents.messages = True

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏≠‡∏ó
client = discord.Client(intents=intents)

# Event ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
@client.event
async def on_ready():
    print(f"‚úÖ Logged in as {client.user}")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∏‡∏¢
conversation_history = []

# Event ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó
@client.event
async def on_message(message):
    if message.author == client.user:
        return  # ‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
    
    if message.channel.id != ALLOWED_CHANNEL_ID:
        return  # ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ä‡∏ó ‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö‡∏≠‡πâ‡∏ß‡∏ô ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô

    user_message = message.content
    channel = message.channel

    # print(f"üì© User said: {user_message}")  # Debugging

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
    conversation_history.append({"role": "user", "content": user_message})

    # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ (‡πÄ‡∏ä‡πà‡∏ô 10 ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)
    if len(conversation_history) > 15:
        conversation_history.pop(0)

    try:
        # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡πÉ‡∏´‡πâ OpenAI
        response = openai.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": core["system_prompt"]} 
            ] + conversation_history
        )

        # ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        if response.choices and response.choices[0].message.content:
            bot_reply = response.choices[0].message.content
        else:
            bot_reply = random.choice(core["unknown"])

        await channel.send(bot_reply)


    except Exception as e:
        print(f"‚ùå Error: {e}")
        await channel.send(random.choice(core["unknown"]))

# ‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó
client.run(DISCORD_TOKEN)
