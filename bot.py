import json
import random
import discord
import openai
import os
from dotenv import load_dotenv
from gtts import gTTS
import asyncio
import imageio_ffmpeg

# ‡πÇ‡∏´‡∏•‡∏î Token ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env
load_dotenv()
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå boonmathun_core.json
with open("data/boonmathun_core.json", "r", encoding="utf-8") as file:
    core = json.load(file)

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Channel ‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏ï‡∏≠‡∏ö (‡πÉ‡∏™‡πà ID ‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó)
ALLOWED_CHANNEL_ID = 1349123952206942321

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Intents ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏≠‡∏ó
intents = discord.Intents.default()
intents.messages = True
intents.voice_states = True  # ‡πÄ‡∏û‡∏¥‡πà‡∏° voice intents ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏≠‡∏ó
client = discord.Client(intents=intents)

# ‚úÖ ‡πÉ‡∏ä‡πâ FFmpeg ‡∏ó‡∏µ‡πà‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ú‡πà‡∏≤‡∏ô imageio
ffmpeg_path = imageio_ffmpeg.get_ffmpeg_exe()
discord.FFmpegPCMAudio.executable = ffmpeg_path

# Event ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
@client.event
async def on_ready():
    print(f"‚úÖ Logged in as {client.user}")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∏‡∏¢
conversation_history = []

# Event ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó
@client.event
async def on_message(message):
    if message.author == client.user:
        return  # ‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á

    if message.channel.id != ALLOWED_CHANNEL_ID:
        return  # ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ä‡∏ó‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î

    user_message = message.content
    channel = message.channel

    print(f"üë§ {message.author}: {user_message}") # debugging

    # ‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å "@Ouan ‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡∏¥‡∏™"
    if client.user in message.mentions and "‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡∏¥‡∏™" in user_message:
        if message.author.voice:  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á
            channel = message.author.voice.channel
            await channel.connect()
            await message.channel.send("‡∏≠‡∏∞‡∏Å‡∏∏‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏•‡∏∞")
        else:
            await message.channel.send("‡∏°‡∏∂‡∏á‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏•‡∏¢ ‡πÑ‡∏≠‡πÄ‡∏ß‡∏£")
        return

    # ‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å "@Ouan ‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß"
    if client.user in message.mentions and "‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß" in user_message:
        if message.guild.voice_client:  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ö‡∏≠‡∏ó‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á
            await message.guild.voice_client.disconnect()
            await message.channel.send("‡∏≠‡∏∞‡πÜ ‡∏Å‡∏∏‡πÑ‡∏õ‡∏Å‡πá‡πÑ‡∏î‡πâ")
        else:
            await message.channel.send("‡∏Å‡∏∏‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏•‡∏¢ ‡πÑ‡∏≠‡πÄ‡∏ß‡∏£")
        return

    if client.user in message.mentions:
        # ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
        conversation_history.append({"role": "user", "content": user_message})

        # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ (‡πÄ‡∏ä‡πà‡∏ô 15 ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)
        if len(conversation_history) > 15:
            conversation_history.pop(0)

        try:
            # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡πÉ‡∏´‡πâ OpenAI
            response = openai.chat.completions.create(
                model="gpt-4o-mini",
                messages=[
                    {"role": "system", "content": core["system_prompt"]}
                ] + conversation_history
            )

            # ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            if response.choices and response.choices[0].message.content:
                bot_reply = response.choices[0].message.content
            else:
                bot_reply = random.choice(core["unknown"])

            await channel.send(bot_reply)

            # ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏ö‡∏≠‡∏ó‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Voice Channel ‡πÉ‡∏´‡πâ‡∏û‡∏π‡∏î‡∏≠‡∏≠‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á
            if message.guild.voice_client:
                await speak_text(message.guild.voice_client, bot_reply)

        except Exception as e:
            print(f"‚ùå Error: {e}")
            await channel.send(random.choice(core["unknown"]))

# ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏û‡∏π‡∏î response ‡πÉ‡∏ô Voice Channel
async def speak_text(voice_client, text):
    tts = gTTS(text=text, lang="th")  # ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á
    tts.save("voice.mp3")

    if not voice_client.is_playing():
        voice_client.play(discord.FFmpegPCMAudio("voice.mp3"))
        while voice_client.is_playing():
            await asyncio.sleep(1)  # ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏à‡∏ô‡∏à‡∏ö

# ‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó
client.run(DISCORD_TOKEN)
